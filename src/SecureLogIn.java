/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 349737163
 */

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.EOFException;
import java.io.FileOutputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;

public class SecureLogIn extends javax.swing.JFrame {
    //create a global array for invalid passwords
     static String[]invalidPasswords = new String[20];
     static String[]firstNames=new String[10];
     static String[]lastNames=new String[10];
     static String[]names = new String[10];
     static String[]emails=new String[10];
     static String[]passwords = new String[10];
     static byte encryptedPasswords[];
     String firstName=" ";
     String lastName=" ";
     String username=" ";
     String email=" ";
     String password=" ";
     String registrationInfo=" ";
     //create a file for the registered users
     static File users = new File("users.txt");
     
    /**
     * Creates new form SecureLogIn
     */
    public SecureLogIn() 
            throws FileNotFoundException, IOException, ClassNotFoundException, EOFException{
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        changePasswordDialog = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        usernameField1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        changePassword = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        confirmPassword = new javax.swing.JTextField();
        submitPassword = new javax.swing.JButton();
        newPasswordMessage = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        loginName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        loginPasswordField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        loginMessage = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        newPassword = new javax.swing.JTextField();
        register = new javax.swing.JButton();
        forgotPassword = new javax.swing.JButton();
        registrationMessage = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        fName = new javax.swing.JLabel();
        fNameField = new javax.swing.JTextField();
        lName = new javax.swing.JLabel();
        lNameField = new javax.swing.JTextField();
        firstNameMessage = new javax.swing.JLabel();
        lastNameMessage = new javax.swing.JLabel();
        usernameMessage = new javax.swing.JLabel();
        emailMessage = new javax.swing.JLabel();
        passwordMessage = new javax.swing.JLabel();

        changePasswordDialog.setMinimumSize(new java.awt.Dimension(553, 315));
        changePasswordDialog.setModal(true);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Forgot Password");

        jLabel10.setText("Username:");

        usernameField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameField1ActionPerformed(evt);
            }
        });

        jLabel11.setText("New Password:");

        jLabel12.setText("Confirm Password:");

        submitPassword.setText("Submit");
        submitPassword.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        submitPassword.setBorderPainted(false);
        submitPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitPasswordActionPerformed(evt);
            }
        });

        newPasswordMessage.setMaximumSize(new java.awt.Dimension(20, 50));
        newPasswordMessage.setMinimumSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(confirmPassword))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(usernameField1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(97, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(newPasswordMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitPassword)
                .addGap(48, 48, 48))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(usernameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(changePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitPassword)
                    .addComponent(newPasswordMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout changePasswordDialogLayout = new javax.swing.GroupLayout(changePasswordDialog.getContentPane());
        changePasswordDialog.getContentPane().setLayout(changePasswordDialogLayout);
        changePasswordDialogLayout.setHorizontalGroup(
            changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changePasswordDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        changePasswordDialogLayout.setVerticalGroup(
            changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changePasswordDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("JZ Corporation");

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        loginPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginPasswordFieldActionPerformed(evt);
            }
        });

        jButton1.setText("Login");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("___________________________________________________________________________________");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("New User Account");

        jLabel6.setText("Username:");

        jLabel7.setText("Email:");

        jLabel8.setText("Password:");

        register.setText("Register");
        register.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        register.setBorderPainted(false);
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });

        forgotPassword.setText("Forgot Password");
        forgotPassword.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        forgotPassword.setBorderPainted(false);
        forgotPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forgotPasswordActionPerformed(evt);
            }
        });

        registrationMessage.setPreferredSize(new java.awt.Dimension(10, 20));

        exit.setText("Exit");
        exit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exit.setBorderPainted(false);
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        fName.setText("First Name:");

        lName.setText("Last Name:");

        firstNameMessage.setPreferredSize(new java.awt.Dimension(10, 20));

        lastNameMessage.setPreferredSize(new java.awt.Dimension(20, 20));

        usernameMessage.setPreferredSize(new java.awt.Dimension(20, 20));

        emailMessage.setPreferredSize(new java.awt.Dimension(20, 20));

        passwordMessage.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(255, 255, 255)
                                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(loginName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(50, 50, 50)
                                                .addComponent(jLabel3))
                                            .addComponent(loginMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(forgotPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(loginPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(94, 94, 94)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passwordMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel8))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(fName))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(usernameMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(firstNameMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fNameField)
                                    .addComponent(usernameField)
                                    .addComponent(newPassword))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(registrationMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93)
                                .addComponent(register, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lName)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(emailMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(lastNameMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lNameField)
                                    .addComponent(emailField))
                                .addGap(37, 37, 37)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exit)
                    .addComponent(jLabel1))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(loginName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(loginPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(loginMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(forgotPassword)))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(27, 27, 27)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fName)
                            .addComponent(fNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lName)
                            .addComponent(lNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(firstNameMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lastNameMessage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(usernameMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(newPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(registrationMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(passwordMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(register)
                        .addGap(36, 36, 36))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException, IOException, NoSuchAlgorithmException, NoSuchElementException{
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecureLogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecureLogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecureLogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecureLogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //create a file for bad passwords
        File badPasswords = new File("badPasswords.txt");
        Scanner badPasswordInput = new Scanner(badPasswords);
        //read the bad passwords file into the array
        for(int i = 0;i<20;i++){
            invalidPasswords[i]=badPasswordInput.nextLine();
        }
        
    
        //read the existing user names into a name array
        Scanner usersScanner = new Scanner(users);
        int numUsers = -1;
        while(usersScanner.hasNextLine()){
            numUsers++;
            String nextUser = usersScanner.nextLine();
            //System.out.println(nextUser);
            
            //semicolon delimiter for the user file
            StringTokenizer phrase = new StringTokenizer(nextUser,";");
            String curFirst="";
            String curLast="";
            String curName="";
            String curEmail="";
            String curPassword="";
            while(phrase.hasMoreTokens()){
                curFirst=phrase.nextToken();
                curLast=phrase.nextToken();
                curName=phrase.nextToken();
                curEmail=phrase.nextToken();
                curPassword=phrase.nextToken();
                firstNames[numUsers]=curFirst;
                lastNames[numUsers]=curLast;
                names[numUsers]=curName;
                emails[numUsers]=curEmail;
                passwords[numUsers]=curPassword;
                
                /*
                try{
                MessageDigest md = MessageDigest.getInstance("MD5");
                md.update("soidg2".getBytes());
                encryptedPasswords=md.digest();
                String sbl="";
                for(int i = 0;i<encryptedPasswords.length;i++){
                 sbl += (Integer.toHexString((encryptedPasswords[i]&0xFF)|0x100).substring(1,3));
                }
                System.out.println("Bob: "+sbl);
                //passwords[numUsers]=sbl;
            }catch(NoSuchAlgorithmException ex){
            }*/
                
            }
        }
        /*for(int i = 0;i<3;i++){
            names[i]=usersScanner.nextLine();//.nextToken();
        }*/
        System.out.println(Arrays.toString(firstNames));
        System.out.println(Arrays.toString(lastNames));
        System.out.println(Arrays.toString(names));
        System.out.println(Arrays.toString(emails));
        System.out.println(Arrays.toString(passwords));
        //System.out.println(Arrays.toString(invalidPasswords));
        
        try{
            PrintWriter output = new PrintWriter(users);
            //password for jackie - adog24
            //password for bob - soidg2
            //password for perry - dsb47
            output.println("Jackie;Zo;jackieZ27;jackie@gmail.com;41f843ff6aef4f9e902ec6ef5bb91b2c");
            output.println("Bob;Smith;BobS34;bob@gmail.com;166dc9835b53c66eb20d720ba29e299a");
            output.println("Perry;Lop;PerryL21;perry@gmail.com;20fea34cec041632f470efc8ccc09ce1");
            output.close();
        }catch(IOException ex){
            System.out.println("Error");
        }
        /*
        try{
            PrintWriter output = new PrintWriter(badPasswords);
            output.println("password");
            output.println("123456");
            output.println("abcdef");
            output.close();
        }catch(IOException ex){
            System.out.println("Error");
        }*/
        /*
        Scanner badPasswordInput = new Scanner(badPasswords);
        String[] invalidPasswords = new String[20];
        //read the file into a bad password array
        for(int i = 0;i<20;i++){
            invalidPasswords[i]=badPasswordInput.nextLine();
        }
        System.out.println(Arrays.toString(invalidPasswords));*/
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SecureLogIn().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(SecureLogIn.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SecureLogIn.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
        // If the register button is clicked
        //String username=" ";
        //String email=" ";
        //String password=" ";
        firstNameMessage.setText("");
        lastNameMessage.setText("");
        emailMessage.setText("");
        usernameMessage.setText("");
        passwordMessage.setText("");
        registrationMessage.setText("");
        int numRegistered = 3;
        //gets information from the GUI
        firstName=fNameField.getText();
        lastName=lNameField.getText();
        username = usernameField.getText();
        email=emailField.getText();
        password = newPassword.getText();
        
        boolean validUsername = checkUsername(username);
        boolean validEmail=checkEmail(email);
        boolean validPassword=validPassword(password);
        boolean validFirstName=checkNames(firstName);
        boolean validLastName=checkNames(lastName);
        if(validUsername&&validEmail&&validPassword&&validFirstName&&validLastName){ //if all the information is valid
            registrationMessage.setText("Registration complete!");
            //clear text fields
            fNameField.setText("");
            lNameField.setText("");
            usernameField.setText("");
            newPassword.setText("");
            emailField.setText("");
            //write information into arrays
            names[numRegistered]=username;
            emails[numRegistered]=email;
            firstNames[numRegistered]=firstName;
            lastNames[numRegistered]=lastName;
            //encrypt the user's password
            try{
                MessageDigest md = MessageDigest.getInstance("MD5");
                String sbl="";
                md.update(password.getBytes());
                encryptedPasswords=md.digest();
                for(int i = 0;i<encryptedPasswords.length;i++){
                 sbl += (Integer.toHexString((encryptedPasswords[i]&0xFF)|0x100).substring(1,3));
                }
                passwords[numRegistered]=sbl;
            }catch(NoSuchAlgorithmException ex){
            }
            
            //write information into user file
            try{
            PrintWriter output = new PrintWriter(users);
            for(int i =0;i<10;i++){
                if(firstNames[i]!=null){
                output.println(firstNames[i]+";"+lastNames[i]+";"+names[i]+";"+emails[i]+";"+passwords[i]);
                }
            }
            output.close();
        }catch(IOException ex){
            System.out.println("Error");
        }            
            numRegistered++;
            System.out.println(Arrays.toString(names));
            System.out.println(Arrays.toString(emails));
            System.out.println(Arrays.toString(passwords));
        }else{
            if(!validUsername){
                usernameField.setText("");
                usernameMessage.setText("Username is not valid");
            }
            if(!validEmail){
                emailField.setText("");
                emailMessage.setText("Email is not valid");
            }
            if(!validPassword){
                newPassword.setText("");
                passwordMessage.setText("Password is not valid");
            }
            if(!validFirstName){
                fNameField.setText("");
                firstNameMessage.setText("First Name is not Valid");
            }
            if(!validLastName){
                lNameField.setText("");
                lastNameMessage.setText("Last Name is not Valid");
            }
        }

    }//GEN-LAST:event_registerActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // When login button is pressed
        boolean login = false;
        String username = loginName.getText();
        String loginPassword = loginPasswordField.getText();
        String encryptedPassword="";
        try{
                MessageDigest md = MessageDigest.getInstance("MD5");
                md.update(loginPassword.getBytes());
                encryptedPasswords=md.digest();
                encryptedPassword="";
                for(int i = 0;i<encryptedPasswords.length;i++){
                 encryptedPassword += (Integer.toHexString((encryptedPasswords[i]&0xFF)|0x100).substring(1,3));
                }
                
            }catch(NoSuchAlgorithmException ex){
        }
        
        for(int i =0;i<10;i++){
            if(username.equals(names[i])){
                if(encryptedPassword.equals(passwords[i])){
                    login=true;
                }
            }
        }
        if(login){
            loginMessage.setText("Login Successful");
            loginName.setText("");
            loginPasswordField.setText("");
            
        }else{
            loginMessage.setText("Try Again!");
            loginPasswordField.setText("");
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void forgotPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forgotPasswordActionPerformed
        // if the user forgot their password
        String username = loginName.getText();
        changePasswordDialog.setVisible(true);
        /*
        for(int i = 0;i<10;i++){
            if(username.equals(names[i])){
                
            }
        }*/
    }//GEN-LAST:event_forgotPasswordActionPerformed

    private void loginPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginPasswordFieldActionPerformed

    private void usernameField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameField1ActionPerformed

    private void submitPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitPasswordActionPerformed
        // When the user submits a new password
        String username=usernameField1.getText();
        String password=changePassword.getText();
        String confirmP=confirmPassword.getText();
        int index=0;
        boolean userFound=false;
        if(username.length()>0){
            for(int i = 0;i<10;i++){
                if(username.equals(names[i])){
                    userFound=true;
                    index=i;
                }
            }
        }else{
            newPasswordMessage.setText("Enter a valid username");
        }
       
        if(userFound){
            if(password.length()>=4){
                if(password.equals(confirmP)){
                    //display success message
                    newPasswordMessage.setText("Password successfully changed!");
                    //clear text fields
                    changePassword.setText("");
                    confirmPassword.setText("");
                    usernameField1.setText("");
                    try{
                        MessageDigest md = MessageDigest.getInstance("MD5");
                        md.update(password.getBytes());
                        String encryptedPassword="";
                        encryptedPasswords=md.digest();
                        for(int i = 0;i<encryptedPasswords.length;i++){
                            encryptedPassword += (Integer.toHexString((encryptedPasswords[i]&0xFF)|0x100).substring(1,3));
                        }
                        passwords[index]=encryptedPassword;
                    }catch(NoSuchAlgorithmException ex){
                        }
                }else{
                    newPasswordMessage.setText("Passwords don't match");
                    confirmPassword.setText("");
                }
            }else{
                newPasswordMessage.setText("Passwords must be greater than 4 characters");
                }
        }else{
            newPasswordMessage.setText("User not found");
            usernameField1.setText("");
        }
    }//GEN-LAST:event_submitPasswordActionPerformed
/**
 * Checks if the username entered is a valid string of non-zero length
 * @param username
 * @return 
 */
    public boolean checkUsername(String username){
        if(username.indexOf(" ")>=0){
            return false; //if the username contains a space, it is not valid
        }else{
        if(username.length()==0){
            return false;
        }else{
            return true;
        }
        }
    }
    
    public boolean checkNames(String name){
        if(name.length()==0){
            return false;
        }else{
        if(name.indexOf(" ")>=0){
            //names are not valid if they contain a space
            return false;
        }else{
            //checks if the name starts with a letter
            if(name.charAt(0)>=65&&name.charAt(0)<=90){
                return true;
            }else if (name.charAt(0)>=97&&name.charAt(0)<=122){
                return true;
            }else{
                return false;
            }
        }
        }
    }
    public boolean checkEmail(String email){
        boolean at=false;
        boolean period=false;
        if(email.length()<=0){
            return false;
        }else{
            if(email.indexOf("@")==0||email.indexOf("@")==-1){
                at=false;
            }else{
                at=true;
            }
            if(email.indexOf(".")<email.length()-4){
                period=false;
            }else{
                if(email.substring(email.indexOf(".")).length()-1<2){
                    period=false;
                }else{
                    period=true;
                }
        }
            if(at&&period){
                return true;
            }else{
                return false;
            }
        }
    }
    
    public boolean validPassword(String password){
        boolean valid = true;
        
        if(password.length()>=4){
            for(int i = 0;i<20;i++){
                if(password.equals(invalidPasswords[i])){
                    valid=false;
                }
            }
            if(valid){
                return true;
            }else{
                return false;
            }
        }else{
            return false;
        }
        
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField changePassword;
    private javax.swing.JDialog changePasswordDialog;
    private javax.swing.JTextField confirmPassword;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailMessage;
    private javax.swing.JButton exit;
    private javax.swing.JLabel fName;
    private javax.swing.JTextField fNameField;
    private javax.swing.JLabel firstNameMessage;
    private javax.swing.JButton forgotPassword;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lName;
    private javax.swing.JTextField lNameField;
    private javax.swing.JLabel lastNameMessage;
    private javax.swing.JLabel loginMessage;
    private javax.swing.JTextField loginName;
    private javax.swing.JTextField loginPasswordField;
    private javax.swing.JTextField newPassword;
    private javax.swing.JLabel newPasswordMessage;
    private javax.swing.JLabel passwordMessage;
    private javax.swing.JButton register;
    private javax.swing.JLabel registrationMessage;
    private javax.swing.JButton submitPassword;
    private javax.swing.JTextField usernameField;
    private javax.swing.JTextField usernameField1;
    private javax.swing.JLabel usernameMessage;
    // End of variables declaration//GEN-END:variables
}
